{"version":3,"sources":["components/addItem/plus.svg","components/item/heart0.svg","components/item/heart1.svg","components/item/edit.svg","components/info/arrow.svg","components/addItem/Add.js","components/item/Item.js","components/Todo.js","components/addForm/AddForm.js","components/info/Info.js","redusers/cards.js","redusers/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Add","react_default","a","createElement","Link","to","className","src","plus","alt","Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLiked","card","like","setState","likeCard","id","onChangeLike","_this2","title","description","concat","edit","onClick","onLike","heart0","heart1","Component","connect","ownProps","myStore","cards","find","dispatch","type","payload","App","react","addItem_Add","map","item_Item","key","AddForm","newCard","Date","now","toString","addTitleInput","value","addDescription","onAddCard","length","slice","document","getElementById","innerText","placeholder","ref","input","onChange","titleLimit","cols","rows","textarea","descriptionLimit","addCard","Info","infoTitle","infoDescription","e","target","arrow","handleInfoTitleChange","handleInfoDescriptionChange","infoChangeData","onInfoSave","onInfoDelete","match","params","localStorage","getItem","setItem","JSON","stringify","initialState","combineReducers","routing","routerReducer","arguments","undefined","parse","action","toConsumableArray","i","splice","Boolean","window","location","hostname","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","history","syncHistoryWithStore","createHashHistory","ReactDOM","render","es","HashRouter","Switch","Route","exact","path","component","Todo","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae62b035.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.6f10bc92.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart0.7fa7a983.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart1.4fc8191e.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.d1869010.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.38c72769.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport plus from './plus.svg';\n\nfunction Add() {\n  return (\n    <Link to='/addForm' className=\"add-link\">\n      <img className=\"plus\" src={plus} alt=\"plus\"/>\n    </Link>\n  );\n} \n\nexport default Add;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport heart0 from \"./heart0.svg\";\nimport heart1 from \"./heart1.svg\";\nimport edit from \"./edit.svg\";\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLiked: !this.props.card.like\n    };\n  }\n\n  onLike() {\n    this.setState({isLiked: !this.state.isLiked});\n    const likeCard = {\n      id: this.props.id,\n      like: this.state.isLiked\n    };\n    this.props.onChangeLike(likeCard);\n  }\n\n  render() {\n    return (\n      <div className=\"item\">\n        <h2 className=\"item-title\">\n          {this.props.title}\n        </h2>\n\n        <p className=\"item-text\">\n          {this.props.description}\n        </p>\n\n        <div className=\"item-buttons\">\n          <span className = \"item-info\">\n            <Link to={`/info/${this.props.id}`}>\n              <img\n                src={edit}\n                alt=\"\"\n              />\n            </Link>\n          </span>\n\n          <span className=\"heart\" onClick={() => {this.onLike()}}>\n            <img src={this.state.isLiked ? heart0 : heart1} alt=\"\"/>\n          </span>\n        </div>\n      </div>\n    );\n  }\n} \n\nexport default connect(\n  (state, ownProps) => ({\n      myStore: state,\n      card: state.cards.find(card => card.id === ownProps.id)\n    }),\n    dispatch => ({\n      onChangeLike: (likeCard) => {\n        dispatch({\n          type: 'LIKE_CARD',\n          payload: likeCard\n        })\n      }\n    })\n)(Item);","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport Add from './addItem/Add';\nimport Item from './item/Item';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <header className=\"todo-header\">\n          <h1 className=\"todo-title\">\n            To do list\n          </h1>\n        </header>\n\n        <main className=\"todo-body\">\n        <Add />\n        {\n          this.props.myStore.cards.map((card) =>\n            <Item\n              key={card.id}\n              id={card.id}\n              title={card.title}\n              description={card.description}\n              like={card.like}\n            />\n          )\n        }\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  (state, ownProps) => ({\n    myStore: state,\n    ownProps\n  })\n)(App);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass AddForm extends Component {\n\n  addCard() {\n    const newCard = {\n      id: Date.now().toString(),\n      title: this.addTitleInput.value,\n      description: this.addDescription.value,\n      like: false\n    };\n\n    this.addTitleInput.value = '';\n    this.addDescription.value = '';\n    this.props.onAddCard(newCard);\n  }\n\n  titleLimit() {\n    const limit = 20;\n    const length = this.addTitleInput.value.length;\n\n    if (length >= limit) {\n      this.addTitleInput.value = this.addTitleInput.value.slice(0, limit);\n    }\n\n    document.getElementById('titleLimit').innerText = limit - length > 0 ? limit - length : 0;\n  }\n\n  descriptionLimit() {\n    const limit = 160;\n    const length = this.addDescription.value.length;\n\n    if (length >= limit) {\n      this.addDescription.value = this.addDescription.value.slice(0, limit);\n    }\n\n    document.getElementById('descriptionLimit').innerText = limit - length > 0 ? limit - length : 0;\n  }\n\n  render() {\n    return (\n      <div className=\"addForm-box\">\n        <h1 className=\"addForm-big-title\">\n          New card\n        </h1>\n        <form className=\"addForm-item\" >\n          <input\n            type=\"text\"\n            className=\"addForm-title\"\n            placeholder=\"Title\"\n            ref={(input) => { this.addTitleInput = input }}\n            onChange={() => {this.titleLimit()}}\n          />\n          <textarea\n            cols=\"30\"\n            rows=\"10\"\n            placeholder=\"Description\"\n            ref={(textarea) => { this.addDescription = textarea }}\n            onChange={() => { this.descriptionLimit()}}\n          />\n          <div className=\"addForm-btn\">\n            <Link to='/'>\n              <button onClick={() => this.addCard()}>\n                Save\n              </button>\n            </Link>\n          </div>\n          <span className=\"title-limit\" id=\"titleLimit\">\n            20\n          </span>\n          <span className=\"description-limit\" id=\"descriptionLimit\">\n            160\n          </span>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    myStore: state\n  }),\n  dispatch => ({\n    onAddCard: (newCard) => {\n      dispatch({ type: 'ADD_CARD', payload: newCard })\n    }\n  })\n)(AddForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport arrow from './arrow.svg';\n\nclass Info extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      infoTitle: this.props.card.title || '',\n      infoDescription: this.props.card.description || ''\n    };\n  }\n\n  handleInfoTitleChange(e) {\n    const limit = 20;\n    const length = document.getElementById('infoTitle').value.length;\n\n    this.setState({\n      infoTitle: e.target.value.slice(0, limit)\n    });\n\n    document.getElementById('titleLimit').innerText = limit - length > 0 ? limit - length : 0;\n  }\n\n  handleInfoDescriptionChange(e) {\n    const limit = 160;\n    const length = document.getElementById('infoDescriptionField').value.length;\n\n    this.setState({\n      infoDescription: e.target.value.slice(0, limit)\n    });\n\n    document.getElementById('descriptionLimit').innerText = limit - length > 0 ? limit - length : 0;\n  }\n\n  render() {\n    return (\n      <div className=\"info-box\">\n        <span className=\"info-back\">\n          <Link to='/'>\n            <img src={arrow} alt=\"\"/>\n          </Link>\n        </span>\n        <h1 className=\"big-info-title\">\n          Card info\n        </h1>\n        <form className=\"info-item\">\n          <input\n            type=\"text\"\n            className=\"info-title\"\n            id=\"infoTitle\"\n            value={this.state.infoTitle}\n            onChange={(e) => { this.handleInfoTitleChange(e); }}\n            />\n          <textarea\n            id=\"infoDescriptionField\"\n            cols=\"30\"\n            rows=\"10\"\n            value={this.state.infoDescription}\n            onChange={(e) => {this.handleInfoDescriptionChange(e)}}\n            />\n          <div className=\"info-btn\">\n            <Link to='/'>\n              <button onClick={() => {\n                let infoChangeData = {\n                  id: this.props.card.id,\n                  title: this.state.infoTitle,\n                  description: this.state.infoDescription\n                };\n                this.props.onInfoSave(infoChangeData);\n              }}>\n                Save\n              </button>\n            </Link>\n            <Link to='/'>\n              <span onClick={() => {\n                let id = this.props.card.id;\n                this.props.onInfoDelete(id);\n              }}>\n                Delete\n              </span>\n            </Link>\n          </div>\n          <span className=\"title-limit\" id=\"titleLimit\">\n            {\n              20 - this.props.card.title.length\n            }\n          </span>\n          <span className=\"description-limit\" id=\"descriptionLimit\">\n            {\n              160 - this.props.card.description.length\n            }\n          </span>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    card: state.cards.find(card => card.id === ownProps.match.params.id)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  dispatch => ({\n    onInfoSave: (infoChangeData) => {\n      dispatch({\n        type: 'INFO_CHANGE_CARD',\n        payload: infoChangeData\n      })\n    },\n    onInfoDelete: (id) => {\n      dispatch({\n        type: 'DELETE_CARD',\n        payload: id\n      })\n    }\n  })\n  )(Info);","if (!localStorage.getItem('cards')) {\n  localStorage.setItem('cards', JSON.stringify([]));\n}\n\nlet initialState = localStorage.getItem('cards');\n\nexport default function cardList(state = JSON.parse(initialState), action) {\n  switch (action.type) {\n    case 'ADD_CARD':\n      state = [...state,\n        action.payload\n      ];\n\n      localStorage.setItem('cards', JSON.stringify(state));\n\n      return state;\n\n    case 'INFO_CHANGE_CARD':\n      for (let i = 0; i < state.length; i += 1) {\n        if (action.payload.id === state[i].id) {\n          state[i].title = action.payload.title;\n          state[i].description = action.payload.description;\n        }\n      }\n\n      localStorage.setItem('cards', JSON.stringify(state));\n      return state;\n\n    case 'LIKE_CARD':\n      for (let i = 0; i < state.length; i += 1) {\n        if (action.payload.id === state[i].id) {\n          state[i].like = action.payload.like;\n        }\n      }\n\n      localStorage.setItem('cards', JSON.stringify(state));\n      return state;\n\n    case 'DELETE_CARD':\n      for (let i = 0; i < state.length; i += 1) {\n        if (action.payload === state[i].id) {\n          state.splice(i, 1);\n        }\n      }\n\n      localStorage.setItem('cards', JSON.stringify(state));\n      return state;\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport cards from './cards';\n\nexport default combineReducers({\n  routing: routerReducer,\n  cards\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport createHashHistory from 'history/createHashHistory';\nimport { syncHistoryWithStore } from 'react-router-redux';\n\nimport Todo from './components/Todo';\nimport AddForm from './components/addForm/AddForm';\nimport Info from './components/info/Info';\nimport reducer from './redusers/index';\nimport './main.sass'\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst history = syncHistoryWithStore(createHashHistory(), store);\n\nconst Routing = () => {\n  return (\n    <Provider store={store} history={history}>\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={Todo}/>\n          <Route exact path='/addForm' component={AddForm}/>\n          <Route exact path='/info/:id' component={Info}/>\n        </Switch>\n      </HashRouter>\n    </Provider>\n  )\n}\n\nReactDOM.render(<Routing />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}